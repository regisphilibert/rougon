{{- .Scratch.Set "items" slice -}}
{{- with (.Param "pagination") -}}
	{{- $pagi := $.Paginator . -}}
	{{- $.Scratch.Set "pages" $pagi.Pages -}}
	{{- $.Scratch.SetInMap "pagination" "page" $pagi.PageNumber -}}
	{{- $.Scratch.SetInMap "pagination" "pages" $pagi.TotalPages -}}
	{{- $.Scratch.SetInMap "pagination" "self" (partial "formatUrl.json" (dict "context" $ "url" $pagi.URL)) -}}
	{{- $.Scratch.SetInMap "pagination" "first" (partial "formatUrl.json" (dict "context" $ "url" $pagi.First.URL)) -}}
	{{- $.Scratch.SetInMap "pagination" "last" (partial "formatUrl.json" (dict "context" $ "url" $pagi.Last.URL)) -}}
	{{- if $pagi.HasNext -}}
	{{- $.Scratch.SetInMap "pagination" "next" (partial "formatUrl.json" (dict "context" $ "url" $pagi.Next.URL)) -}}
	{{- end -}}
	{{- if $pagi.HasPrev -}}
	{{- $.Scratch.SetInMap "pagination" "prev" (partial "formatUrl.json" (dict "context" $ "url" $pagi.Prev.URL)) -}}
	{{ end }}
	{{- $.Scratch.SetInMap "data" "pagination" ($.Scratch.Get "pagination") -}}
{{- else -}}
	{{- $.Scratch.Set "pages" .Pages -}}
{{ end }}
{{- range (.Scratch.Get "pages") -}}
	{{ $partial := printf "%s/transformer.tmpl" .Type }}
	{{ if fileExists (printf "layouts/partials/%s" $partial) }}
		{{ partial $partial . }}
	{{ else }}
		{{ partial "transformer.tmpl" . }}
	{{ end }}
	{{- $.Scratch.Add "items" (slice (.Scratch.Get "item")) -}}
	{{- .Scratch.Delete "item" -}}
{{- end -}}
{{- with eq .Kind "section" -}}
{{- $.Scratch.SetInMap "data" "section" $.Section -}}
{{- end -}}
{{ with eq .Kind "taxonomy" -}}
{{- $.Scratch.SetInMap "data" "taxonomy" $.Data.Singular -}}
{{- $.Scratch.SetInMap "data" "term" $.Data.Term -}}
{{- end -}}
{{- .Scratch.SetInMap "data" "count" (len .Pages) -}}
{{- .Scratch.SetInMap "data" "items" (.Scratch.Get "items") -}}
{{- .Scratch.SetInMap "output" "data" (.Scratch.Get "data") -}}
{{- .Scratch.Get "output" | jsonify -}}
{{- .Scratch.SetInMap "data" "items" (slice) -}}